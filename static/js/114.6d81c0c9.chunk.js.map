{"version":3,"file":"static/js/114.6d81c0c9.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/engine.io-parser/build/esm/commons.js","../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/engine.io-parser/build/esm/index.js","../node_modules/@socket.io/component-emitter/lib/esm/index.js","../node_modules/engine.io-client/build/esm/globals.js","../node_modules/engine.io-client/build/esm/util.js","../node_modules/engine.io-client/build/esm/transport.js","../node_modules/engine.io-client/build/esm/contrib/parseqs.js","../node_modules/engine.io-client/build/esm/transports/polling.js","../node_modules/engine.io-client/build/esm/contrib/has-cors.js","../node_modules/engine.io-client/build/esm/transports/polling-xhr.js","../node_modules/engine.io-client/build/esm/transports/websocket.js","../node_modules/engine.io-client/build/esm/transports/index.js","../node_modules/engine.io-client/build/esm/transports/webtransport.js","../node_modules/engine.io-client/build/esm/contrib/parseuri.js","../node_modules/engine.io-client/build/esm/socket.js","../node_modules/socket.io-parser/build/esm/is-binary.js","../node_modules/socket.io-parser/build/esm/binary.js","../node_modules/socket.io-parser/build/esm/index.js","../node_modules/socket.io-client/build/esm/on.js","../node_modules/socket.io-client/build/esm/socket.js","../node_modules/socket.io-client/build/esm/contrib/backo2.js","../node_modules/socket.io-client/build/esm/manager.js","../node_modules/socket.io-client/build/esm/index.js","../node_modules/socket.io-client/build/esm/url.js"],"sourcesContent":["function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nexport { toPropertyKey as default };","import _typeof from \"./typeof.js\";\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nexport { toPrimitive as default };","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nexport { _defineProperty as default };","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nexport { _objectSpread2 as default };","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach((key) => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data.arrayBuffer().then(toArray).then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, (encoded) => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE, } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType),\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType),\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1),\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type],\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nimport { ERROR_PACKET, } from \"./commons.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, (encodedPacket) => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport function createPacketEncoderStream() {\n    return new TransformStream({\n        transform(packet, controller) {\n            encodePacketToBinary(packet, (encodedPacket) => {\n                const payloadLength = encodedPacket.length;\n                let header;\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\n                if (payloadLength < 126) {\n                    header = new Uint8Array(1);\n                    new DataView(header.buffer).setUint8(0, payloadLength);\n                }\n                else if (payloadLength < 65536) {\n                    header = new Uint8Array(3);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 126);\n                    view.setUint16(1, payloadLength);\n                }\n                else {\n                    header = new Uint8Array(9);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 127);\n                    view.setBigUint64(1, BigInt(payloadLength));\n                }\n                // first bit indicates whether the payload is plain text (0) or binary (1)\n                if (packet.data && typeof packet.data !== \"string\") {\n                    header[0] |= 0x80;\n                }\n                controller.enqueue(header);\n                controller.enqueue(encodedPacket);\n            });\n        },\n    });\n}\nlet TEXT_DECODER;\nfunction totalLength(chunks) {\n    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);\n}\nfunction concatChunks(chunks, size) {\n    if (chunks[0].length === size) {\n        return chunks.shift();\n    }\n    const buffer = new Uint8Array(size);\n    let j = 0;\n    for (let i = 0; i < size; i++) {\n        buffer[i] = chunks[0][j++];\n        if (j === chunks[0].length) {\n            chunks.shift();\n            j = 0;\n        }\n    }\n    if (chunks.length && j < chunks[0].length) {\n        chunks[0] = chunks[0].slice(j);\n    }\n    return buffer;\n}\nexport function createPacketDecoderStream(maxPayload, binaryType) {\n    if (!TEXT_DECODER) {\n        TEXT_DECODER = new TextDecoder();\n    }\n    const chunks = [];\n    let state = 0 /* State.READ_HEADER */;\n    let expectedLength = -1;\n    let isBinary = false;\n    return new TransformStream({\n        transform(chunk, controller) {\n            chunks.push(chunk);\n            while (true) {\n                if (state === 0 /* State.READ_HEADER */) {\n                    if (totalLength(chunks) < 1) {\n                        break;\n                    }\n                    const header = concatChunks(chunks, 1);\n                    isBinary = (header[0] & 0x80) === 0x80;\n                    expectedLength = header[0] & 0x7f;\n                    if (expectedLength < 126) {\n                        state = 3 /* State.READ_PAYLOAD */;\n                    }\n                    else if (expectedLength === 126) {\n                        state = 1 /* State.READ_EXTENDED_LENGTH_16 */;\n                    }\n                    else {\n                        state = 2 /* State.READ_EXTENDED_LENGTH_64 */;\n                    }\n                }\n                else if (state === 1 /* State.READ_EXTENDED_LENGTH_16 */) {\n                    if (totalLength(chunks) < 2) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 2);\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else if (state === 2 /* State.READ_EXTENDED_LENGTH_64 */) {\n                    if (totalLength(chunks) < 8) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 8);\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\n                    const n = view.getUint32(0);\n                    if (n > Math.pow(2, 53 - 32) - 1) {\n                        // the maximum safe integer in JavaScript is 2^53 - 1\n                        controller.enqueue(ERROR_PACKET);\n                        break;\n                    }\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else {\n                    if (totalLength(chunks) < expectedLength) {\n                        break;\n                    }\n                    const data = concatChunks(chunks, expectedLength);\n                    controller.enqueue(decodePacket(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\n                    state = 0 /* State.READ_HEADER */;\n                }\n                if (expectedLength === 0 || expectedLength > maxPayload) {\n                    controller.enqueue(ERROR_PACKET);\n                    break;\n                }\n            }\n        },\n    });\n}\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload, };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\nexport const defaultBinaryType = \"arraybuffer\";\nexport function createCookieJar() { }\n","import { globalThisShim as globalThis } from \"./globals.node.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n/**\n * Generates a random 8-characters string.\n */\nexport function randomString() {\n    return (Date.now().toString(36).substring(3) +\n        Math.random().toString(36).substring(2, 5));\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nexport class TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","import { Transport } from \"../transport.js\";\nimport { randomString } from \"../util.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nexport class Polling extends Transport {\n    constructor() {\n        super(...arguments);\n        this._polling = false;\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this._poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this._polling || !this.writable) {\n            let total = 0;\n            if (this._polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    _poll() {\n        this._polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this._polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this._poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","import { Polling } from \"./polling.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globals.node.js\";\nimport { hasCORS } from \"../contrib/has-cors.js\";\nfunction empty() { }\nexport class BaseXHR extends Polling {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(createRequest, uri, opts) {\n        super();\n        this.createRequest = createRequest;\n        installTimerFunctions(this, opts);\n        this._opts = opts;\n        this._method = opts.method || \"GET\";\n        this._uri = uri;\n        this._data = undefined !== opts.data ? opts.data : null;\n        this._create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    _create() {\n        var _a;\n        const opts = pick(this._opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this._opts.xd;\n        const xhr = (this._xhr = this.createRequest(opts));\n        try {\n            xhr.open(this._method, this._uri, true);\n            try {\n                if (this._opts.extraHeaders) {\n                    // @ts-ignore\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this._opts.extraHeaders) {\n                        if (this._opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this._opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this._method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this._opts.withCredentials;\n            }\n            if (this._opts.requestTimeout) {\n                xhr.timeout = this._opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(\n                    // @ts-ignore\n                    xhr.getResponseHeader(\"set-cookie\"));\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this._onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this._onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this._data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this._onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this._index = Request.requestsCount++;\n            Request.requests[this._index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    _onError(err) {\n        this.emitReserved(\"error\", err, this._xhr);\n        this._cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    _cleanup(fromError) {\n        if (\"undefined\" === typeof this._xhr || null === this._xhr) {\n            return;\n        }\n        this._xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this._xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this._index];\n        }\n        this._xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    _onLoad() {\n        const data = this._xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this._cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this._cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\nconst hasXHR2 = (function () {\n    const xhr = newRequest({\n        xdomain: false,\n    });\n    return xhr && xhr.responseType !== null;\n})();\n/**\n * HTTP long-polling based on the built-in `XMLHttpRequest` object.\n *\n * Usage: browser\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n */\nexport class XHR extends BaseXHR {\n    constructor(opts) {\n        super(opts);\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd }, this.opts);\n        return new Request(newRequest, this.uri(), opts);\n    }\n}\nfunction newRequest(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { pick, randomString } from \"../util.js\";\nimport { encodePacket } from \"engine.io-parser\";\nimport { globalThisShim as globalThis, nextTick } from \"../globals.node.js\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class BaseWS extends Transport {\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws = this.createSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    this.doWrite(packet, data);\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.onerror = () => { };\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\nconst WebSocketCtor = globalThis.WebSocket || globalThis.MozWebSocket;\n/**\n * WebSocket transport based on the built-in `WebSocket` object.\n *\n * Usage: browser, Node.js (since v21), Deno, Bun\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\n * @see https://caniuse.com/mdn-api_websocket\n * @see https://nodejs.org/api/globals.html#websocket\n */\nexport class WS extends BaseWS {\n    createSocket(uri, protocols, opts) {\n        return !isReactNative\n            ? protocols\n                ? new WebSocketCtor(uri, protocols)\n                : new WebSocketCtor(uri)\n            : new WebSocketCtor(uri, protocols, opts);\n    }\n    doWrite(_packet, data) {\n        this.ws.send(data);\n    }\n}\n","import { XHR } from \"./polling-xhr.node.js\";\nimport { WS } from \"./websocket.node.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: XHR,\n};\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"../globals.node.js\";\nimport { createPacketDecoderStream, createPacketEncoderStream, } from \"engine.io-parser\";\n/**\n * WebTransport transport based on the built-in `WebTransport` object.\n *\n * Usage: browser, Node.js (with the `@fails-components/webtransport` package)\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebTransport\n * @see https://caniuse.com/webtransport\n */\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        try {\n            // @ts-ignore\n            this._transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this._transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this._transport.ready.then(() => {\n            this._transport.createBidirectionalStream().then((stream) => {\n                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\n                const encoderStream = createPacketEncoderStream();\n                encoderStream.readable.pipeTo(stream.writable);\n                this._writer = encoderStream.writable.getWriter();\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        this.onPacket(value);\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const packet = { type: \"open\" };\n                if (this.query.sid) {\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\n                }\n                this._writer.write(packet).then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            this._writer.write(packet).then(() => {\n                if (lastPacket) {\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this._transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    if (str.length > 8000) {\n        throw \"URI too long\";\n    }\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports as DEFAULT_TRANSPORTS } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nimport { createCookieJar, defaultBinaryType, nextTick, } from \"./globals.node.js\";\nconst withEventListeners = typeof addEventListener === \"function\" &&\n    typeof removeEventListener === \"function\";\nconst OFFLINE_EVENT_LISTENERS = [];\nif (withEventListeners) {\n    // within a ServiceWorker, any event handler for the 'offline' event must be added on the initial evaluation of the\n    // script, so we create one single event listener here which will forward the event to the socket instances\n    addEventListener(\"offline\", () => {\n        OFFLINE_EVENT_LISTENERS.forEach((listener) => listener());\n    }, false);\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes without upgrade mechanism, which means that it will keep the first low-level transport that\n * successfully establishes the connection.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithoutUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithoutUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithUpgrade\n * @see Socket\n */\nexport class SocketWithoutUpgrade extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts) {\n        super();\n        this.binaryType = defaultBinaryType;\n        this.writeBuffer = [];\n        this._prevBufferLen = 0;\n        this._pingInterval = -1;\n        this._pingTimeout = -1;\n        this._maxPayload = -1;\n        /**\n         * The expiration timestamp of the {@link _pingTimeoutTimer} object is tracked, in case the timer is throttled and the\n         * callback is not fired on time. This can happen for example when a laptop is suspended or when a phone is locked.\n         */\n        this._pingTimeoutTime = Infinity;\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            const parsedUri = parse(uri);\n            opts.hostname = parsedUri.host;\n            opts.secure =\n                parsedUri.protocol === \"https\" || parsedUri.protocol === \"wss\";\n            opts.port = parsedUri.port;\n            if (parsedUri.query)\n                opts.query = parsedUri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = [];\n        this._transportsByName = {};\n        opts.transports.forEach((t) => {\n            const transportName = t.prototype.name;\n            this.transports.push(transportName);\n            this._transportsByName[transportName] = t;\n        });\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        if (withEventListeners) {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this._beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this._offlineEventListener = () => {\n                    this._onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                OFFLINE_EVENT_LISTENERS.push(this._offlineEventListener);\n            }\n        }\n        if (this.opts.withCredentials) {\n            this._cookieJar = createCookieJar();\n        }\n        this._open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new this._transportsByName[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    _open() {\n        if (this.transports.length === 0) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        const transportName = this.opts.rememberUpgrade &&\n            SocketWithoutUpgrade.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1\n            ? \"websocket\"\n            : this.transports[0];\n        this.readyState = \"opening\";\n        const transport = this.createTransport(transportName);\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this._onDrain.bind(this))\n            .on(\"packet\", this._onPacket.bind(this))\n            .on(\"error\", this._onError.bind(this))\n            .on(\"close\", (reason) => this._onClose(\"transport close\", reason));\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        SocketWithoutUpgrade.priorWebsocketSuccess =\n            \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    _onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this._sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    this._resetPingTimeout();\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this._onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this._pingInterval = data.pingInterval;\n        this._pingTimeout = data.pingTimeout;\n        this._maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this._resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    _resetPingTimeout() {\n        this.clearTimeoutFn(this._pingTimeoutTimer);\n        const delay = this._pingInterval + this._pingTimeout;\n        this._pingTimeoutTime = Date.now() + delay;\n        this._pingTimeoutTimer = this.setTimeoutFn(() => {\n            this._onClose(\"ping timeout\");\n        }, delay);\n        if (this.opts.autoUnref) {\n            this._pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    _onDrain() {\n        this.writeBuffer.splice(0, this._prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this._prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this._getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this._prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    _getWritablePackets() {\n        const shouldCheckPayloadSize = this._maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this._maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Checks whether the heartbeat timer has expired but the socket has not yet been notified.\n     *\n     * Note: this method is private for now because it does not really fit the WebSocket API, but if we put it in the\n     * `write()` method then the message would not be buffered by the Socket.IO client.\n     *\n     * @return {boolean}\n     * @private\n     */\n    /* private */ _hasPingExpired() {\n        if (!this._pingTimeoutTime)\n            return true;\n        const hasExpired = Date.now() > this._pingTimeoutTime;\n        if (hasExpired) {\n            this._pingTimeoutTime = 0;\n            nextTick(() => {\n                this._onClose(\"ping timeout\");\n            }, this.setTimeoutFn);\n        }\n        return hasExpired;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a message. Alias of {@link Socket#write}.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    send(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    _sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this._onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    _onError(err) {\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        if (this.opts.tryAllTransports &&\n            this.transports.length > 1 &&\n            this.readyState === \"opening\") {\n            this.transports.shift();\n            return this._open();\n        }\n        this.emitReserved(\"error\", err);\n        this._onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    _onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this._pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (withEventListeners) {\n                if (this._beforeunloadEventListener) {\n                    removeEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n                }\n                if (this._offlineEventListener) {\n                    const i = OFFLINE_EVENT_LISTENERS.indexOf(this._offlineEventListener);\n                    if (i !== -1) {\n                        OFFLINE_EVENT_LISTENERS.splice(i, 1);\n                    }\n                }\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this._prevBufferLen = 0;\n        }\n    }\n}\nSocketWithoutUpgrade.protocol = protocol;\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see Socket\n */\nexport class SocketWithUpgrade extends SocketWithoutUpgrade {\n    constructor() {\n        super(...arguments);\n        this._upgrades = [];\n    }\n    onOpen() {\n        super.onOpen();\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            for (let i = 0; i < this._upgrades.length; i++) {\n                this._probe(this._upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    _probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    SocketWithoutUpgrade.priorWebsocketSuccess =\n                        \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this._upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    onHandshake(data) {\n        this._upgrades = this._filterUpgrades(data.upgrades);\n        super.onHandshake(data);\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    _filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        for (let i = 0; i < upgrades.length; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * @example\n * import { Socket } from \"engine.io-client\";\n *\n * const socket = new Socket();\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see SocketWithUpgrade\n */\nexport class Socket extends SocketWithUpgrade {\n    constructor(uri, opts = {}) {\n        const o = typeof uri === \"object\" ? uri : opts;\n        if (!o.transports ||\n            (o.transports && typeof o.transports[0] === \"string\")) {\n            o.transports = (o.transports || [\"polling\", \"websocket\", \"webtransport\"])\n                .map((transportName) => DEFAULT_TRANSPORTS[transportName])\n                .filter((t) => !!t);\n        }\n        super(uri, o);\n    }\n}\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        /**\n         * A map containing acknowledgement handlers.\n         *\n         * The `withError` attribute is used to differentiate handlers that accept an error as first argument:\n         *\n         * - `socket.emit(\"test\", (err, value) => { ... })` with `ackTimeout` option\n         * - `socket.timeout(5000).emit(\"test\", (err, value) => { ... })`\n         * - `const value = await socket.emitWithAck(\"test\")`\n         *\n         * From those that don't:\n         *\n         * - `socket.emit(\"test\", (value) => { ... });`\n         *\n         * In the first case, the handlers will be called with an error when:\n         *\n         * - the timeout is reached\n         * - the socket gets disconnected\n         *\n         * In the second case, the handlers will be simply discarded upon disconnection, since the client will never receive\n         * an acknowledgement from the server.\n         *\n         * @private\n         */\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        var _a, _b, _c;\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = (_b = (_a = this.io.engine) === null || _a === void 0 ? void 0 : _a.transport) === null || _b === void 0 ? void 0 : _b.writable;\n        const isConnected = this.connected && !((_c = this.io.engine) === null || _c === void 0 ? void 0 : _c._hasPingExpired());\n        const discardPacket = this.flags.volatile && !isTransportWritable;\n        if (discardPacket) {\n        }\n        else if (isConnected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        const fn = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, args);\n        };\n        fn.withError = true;\n        this.acks[id] = fn;\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        return new Promise((resolve, reject) => {\n            const fn = (arg1, arg2) => {\n                return arg1 ? reject(arg1) : resolve(arg2);\n            };\n            fn.withError = true;\n            args.push(fn);\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n        this._clearAcks();\n    }\n    /**\n     * Clears the acknowledgement handlers upon disconnection, since the client will never receive an acknowledgement from\n     * the server.\n     *\n     * @private\n     */\n    _clearAcks() {\n        Object.keys(this.acks).forEach((id) => {\n            const isBuffered = this.sendBuffer.some((packet) => String(packet.id) === id);\n            if (!isBuffered) {\n                // note: handlers that do not accept an error as first argument are ignored here\n                const ack = this.acks[id];\n                delete this.acks[id];\n                if (ack.withError) {\n                    ack.call(this, new Error(\"socket has been disconnected\"));\n                }\n            }\n        });\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowledgement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (typeof ack !== \"function\") {\n            return;\n        }\n        delete this.acks[packet.id];\n        // @ts-ignore FIXME ack is incorrectly inferred as 'never'\n        if (ack.withError) {\n            packet.data.unshift(null);\n        }\n        // @ts-ignore\n        ack.apply(this, packet.data);\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        if (!v) {\n            this.skipReconnect = true;\n        }\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        const onError = (err) => {\n            this.cleanup();\n            this._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                this.maybeReconnectOnOpen();\n            }\n        };\n        // emit `error`\n        const errorSub = on(socket, \"error\", onError);\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                onError(new Error(\"timeout\"));\n                socket.close();\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), \n        // @ts-ignore\n        on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called when:\n     *\n     * - the low-level engine is closed\n     * - the parser encountered a badly formatted packet\n     * - all sockets are disconnected\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        var _a;\n        this.cleanup();\n        (_a = this.engine) === null || _a === void 0 ? void 0 : _a.close();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\nexport { Fetch, NodeXHR, XHR, NodeWebSocket, WebSocket, WebTransport, } from \"engine.io-client\";\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n"],"names":["_typeof","o","Symbol","iterator","constructor","prototype","toPropertyKey","t","i","r","e","toPrimitive","call","TypeError","String","Number","_defineProperty","Object","defineProperty","value","enumerable","configurable","writable","ownKeys","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","push","apply","_objectSpread2","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","PACKET_TYPES","create","PACKET_TYPES_REVERSE","key","ERROR_PACKET","type","data","withNativeBlob","Blob","toString","withNativeArrayBuffer","ArrayBuffer","isView","obj","buffer","encodePacket","_ref","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","split","readAsDataURL","toArray","Uint8Array","byteOffset","byteLength","TEXT_ENCODER","chars","lookup","charCodeAt","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decode","SEPARATOR","fromCharCode","createPacketEncoderStream","TransformStream","transform","packet","controller","arrayBuffer","then","encoded","TextEncoder","encode","encodePacketToBinary","payloadLength","header","DataView","setUint8","view","setUint16","setBigUint64","BigInt","enqueue","TEXT_DECODER","totalLength","chunks","reduce","acc","chunk","concatChunks","size","shift","j","slice","Emitter","mixin","on","addEventListener","event","fn","this","_callbacks","once","off","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","args","Array","emitReserved","listeners","hasListeners","nextTick","Promise","resolve","setTimeoutFn","globalThisShim","self","window","Function","pick","_len","attr","_key","k","hasOwnProperty","NATIVE_SET_TIMEOUT","globalThis","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","bind","clearTimeoutFn","randomString","Date","now","Math","random","TransportError","Error","reason","description","context","super","Transport","query","socket","forceBase64","onError","open","readyState","doOpen","close","doClose","onClose","send","packets","write","onOpen","onData","onPacket","details","pause","onPause","createUri","schema","undefined","_hostname","_port","path","_query","hostname","indexOf","port","secure","encodedQuery","str","encodeURIComponent","Polling","_polling","name","_poll","total","doPoll","decodePayload","encodedPayload","encodedPackets","decodedPacket","encodePayload","count","join","doWrite","uri","timestampRequests","timestampParam","sid","b64","XMLHttpRequest","err","hasCORS","empty","BaseXHR","location","isSSL","protocol","xd","req","request","method","xhrStatus","pollXhr","Request","createRequest","_opts","_method","_uri","_data","_create","_a","xdomain","xhr","_xhr","extraHeaders","setDisableHeaderCheck","setRequestHeader","cookieJar","addCookies","withCredentials","requestTimeout","timeout","onreadystatechange","parseCookies","getResponseHeader","status","_onLoad","_onError","document","_index","requestsCount","requests","_cleanup","fromError","abort","responseText","attachEvent","unloadHandler","hasXHR2","newRequest","responseType","concat","isReactNative","navigator","product","toLowerCase","BaseWS","protocols","headers","ws","createSocket","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","WebSocketCtor","WebSocket","MozWebSocket","transports","websocket","_packet","webtransport","_transport","WebTransport","transportOptions","closed","catch","ready","createBidirectionalStream","stream","decoderStream","maxPayload","TextDecoder","state","expectedLength","isBinary","headerArray","getUint16","n","getUint32","pow","createPacketDecoderStream","MAX_SAFE_INTEGER","reader","readable","pipeThrough","getReader","encoderStream","pipeTo","_writer","getWriter","read","done","polling","assign","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","regx","names","queryKey","$0","$1","$2","withEventListeners","OFFLINE_EVENT_LISTENERS","listener","SocketWithoutUpgrade","writeBuffer","_prevBufferLen","_pingInterval","_pingTimeout","_maxPayload","_pingTimeoutTime","Infinity","parsedUri","_transportsByName","transportName","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","closeOnBeforeunload","qs","qry","pairs","l","pair","decodeURIComponent","_beforeunloadEventListener","transport","_offlineEventListener","_onClose","_cookieJar","createCookieJar","_open","createTransport","EIO","id","priorWebsocketSuccess","setTransport","_onDrain","_onPacket","flush","onHandshake","JSON","_sendPacket","_resetPingTimeout","code","pingInterval","pingTimeout","_pingTimeoutTimer","delay","upgrading","_getWritablePackets","payloadSize","c","utf8Length","ceil","_hasPingExpired","hasExpired","msg","options","compress","cleanupAndClose","waitForUpgrade","tryAllTransports","SocketWithUpgrade","_upgrades","_probe","failed","onTransportOpen","cleanup","freezeTransport","error","onTransportClose","onupgrade","to","_filterUpgrades","upgrades","filteredUpgrades","Socket","map","DEFAULT_TRANSPORTS","withNativeFile","File","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","num","newData","reconstructPacket","_reconstructPacket","RESERVED_EVENTS","PacketType","Encoder","replacer","EVENT","ACK","encodeAsString","encodeAsBinary","BINARY_EVENT","BINARY_ACK","nsp","stringify","deconstruction","unshift","isObject","Decoder","reviver","add","reconstructor","decodeString","isBinaryEvent","BinaryReconstructor","takeBinaryData","start","buf","next","payload","tryParse","substr","isPayloadValid","CONNECT","DISCONNECT","CONNECT_ERROR","destroy","finishedReconstruction","reconPack","binData","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","recovered","receiveBuffer","sendBuffer","_queue","_queueSeq","ids","acks","flags","auth","_autoConnect","disconnected","subEvents","subs","onpacket","active","_readyState","_b","_c","_len2","_key2","retries","fromQueue","volatile","_addToQueue","ack","pop","_registerAckCallback","isTransportWritable","engine","isConnected","notifyOutgoingListeners","_this","ackTimeout","timer","_len3","_key3","withError","emitWithAck","_len4","_key4","reject","arg1","arg2","_this2","tryCount","pending","_len5","responseArgs","_key5","_drainQueue","force","_sendConnectPacket","_pid","pid","offset","_lastOffset","_clearAcks","some","onconnect","onevent","onack","ondisconnect","message","emitEvent","_anyListeners","sent","_len6","_key6","emitBuffered","subDestroy","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","Backoff","ms","min","max","factor","jitter","attempts","duration","rand","deviation","floor","reset","setMin","setMax","setJitter","Manager","nsps","reconnection","reconnectionAttempts","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","skipReconnect","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","Engine","openSubDestroy","errorSub","onping","ondata","ondecoded","_destroy","_close","onreconnect","attempt","cache","parsed","loc","test","href","url","sameNamespace","forceNew","multiplex"],"sourceRoot":""}